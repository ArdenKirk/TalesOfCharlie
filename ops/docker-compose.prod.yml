version: "3.9"

x-public: &public
  NEXTAUTH_URL: https://talesofcharlie.com
  NEXT_PUBLIC_API_BASE: https://talesofcharlie.com/api
  AUTH_EMAIL_FROM: "Tales of Charlie <no-reply@talesofcharlie.com>"
  AI_MODE: real
  LLM_PROVIDER: openai
  LLM_MODEL: ${LLM_MODEL:-gpt-5}
  MAX_DAILY_COST_USD: "5"
  REDIS_URL: redis://redis:6379
  LITELLM_BASE_URL: http://litellm:8080/v1
  POSTGRES_DB: toc
  STORE_MODEL_IN_DB: "True"
  MAX_BUDGET: ${MAX_DAILY_COST_USD:-5}
  BUDGET_DURATION: "1d"
  LITELLM_LOG: "INFO"
  REDIS_HOST: redis
  REDIS_PORT: 6379

x-secret: &secret
  DATABASE_URL: ${DATABASE_URL}
  NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
  JWT_SECRET: ${JWT_SECRET}
  AUTH_EMAIL_SERVER: ${AUTH_EMAIL_SERVER}
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
  GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
  LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  LITELLM_SALT_KEY: ${LITELLM_SALT_KEY}
  LITELLM_DATABASE_URL: ${LITELLM_DATABASE_URL:-}

x-env: &common-env
  <<: *public
  <<: *secret

services:
  postgres:
    image: postgres:16
    environment: *common-env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d toc"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7
    command: ["redis-server","--appendonly","yes","--appendfsync","everysec"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  web:
    build:
      context: ..
      dockerfile: ./apps/web/Dockerfile
      target: prod
    environment:
      <<: *common-env
    depends_on:
      - api
    expose:
      - "3000"
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: ./apps/api/Dockerfile
      target: prod
    environment:
      <<: *common-env
    depends_on:
      - postgres
      - redis
      - litellm
    expose:
      - "4000"
    restart: unless-stopped

  worker:
    build:
      context: ..
      dockerfile: ./apps/worker/Dockerfile
      target: prod
    environment: *common-env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  litellm:
    image: ghcr.io/berriai/litellm:latest
    environment: *common-env
    volumes:
      - ./litellm-config.yaml:/app/config.yaml:ro
    command: ["--config", "/app/config.yaml", "--port", "8080", "--host", "0.0.0.0"]
    expose: ["8080"]
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  caddy:
    image: caddy:2
    ports: ["80:80","443:443"]
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
