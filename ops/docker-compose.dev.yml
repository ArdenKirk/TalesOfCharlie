version: "3.9"

x-env: &common-env
  DATABASE_URL: postgresql://postgres:postgres@postgres:5432/toc?schema=public
  REDIS_URL: redis://redis:6379
  NEXTAUTH_URL: http://localhost
  NEXTAUTH_SECRET: dev-secret
  AUTH_EMAIL_SERVER: smtp://mailhog:1025
  AUTH_EMAIL_FROM: "Tales of Charlie <no-reply@localhost>"
  AI_MODE: mock
  GOOGLE_CLIENT_ID: dev-google-client-id-placeholder
  GOOGLE_CLIENT_SECRET: dev-google-client-secret-placeholder
  GOOGLE_CALLBACK_URL: http://localhost/api/auth/google/callback

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: toc
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d toc"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    command: ["redis-server","--appendonly","yes","--appendfsync","everysec"]
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog:latest
    ports: ["8025:8025"]

  web:
    build:
      context: ..
      dockerfile: ./apps/web/Dockerfile
      target: dev
    environment:
      <<: *common-env
      NEXT_PUBLIC_API_BASE: http://localhost/api
    volumes:
      - ..:/app
      - web_node_modules:/app/node_modules
    depends_on:
      - api
    expose: ["3000"]

  api:
    build:
      context: ..
      dockerfile: ./apps/api/Dockerfile
      target: dev
    environment: *common-env
    volumes:
      - ..:/app
      - api_node_modules:/app/node_modules
    expose: ["4000"]

  worker:
    build:
      context: ..
      dockerfile: ./apps/worker/Dockerfile
      target: dev
    environment: *common-env
    volumes:
      - ..:/app
      - worker_node_modules:/app/node_modules
    depends_on:
      - postgres
      - redis

  caddy:
    image: caddy:2
    ports: ["80:80"]
    volumes:
      - ./Caddyfile.dev:/etc/caddy/Caddyfile:ro
    depends_on:
      - web
      - api

volumes:
  postgres_data:
  redis_data:
  web_node_modules:
  api_node_modules:
  worker_node_modules:
